{"version":3,"file":"index.js","sources":["../../src/helpers/helpers.core.ts","../../src/helpers/helpers.math.ts","../../src/helpers/helpers.collection.ts","../../src/helpers/helpers.extras.ts","../../src/helpers/helpers.easing.ts","../../src/helpers/helpers.color.ts","../../src/core/core.animations.defaults.js","../../src/core/core.layouts.defaults.js","../../src/helpers/helpers.intl.ts","../../src/core/core.ticks.js","../../src/core/core.scale.defaults.js","../../src/core/core.defaults.js","../../src/helpers/helpers.canvas.ts","../../src/helpers/helpers.options.ts","../../src/helpers/helpers.config.ts","../../src/helpers/helpers.curve.ts","../../src/helpers/helpers.dom.ts","../../src/helpers/helpers.interpolation.ts","../../src/helpers/helpers.rtl.ts","../../src/helpers/helpers.segment.js","../../src/helpers/helpers.dataset.ts"],"sourcesContent":["/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */\nfunction isNonPrimitive(n: unknown) {\n  return typeof n === 'symbol' || (typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n));\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNonPrimitive(n) && !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\nimport {isNullOrUndef} from './helpers.core.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, vScale, _parsed} = meta;\n    const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n      if (spanGaps) {\n        const distanceToDefinedLo = (_parsed\n          .slice(0, start + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        start -= Math.max(0, distanceToDefinedLo);\n      }\n      start = _limitValue(start, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      let end = Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n      if (spanGaps) {\n        const distanceToDefinedHi = (_parsed\n          .slice(end - 1)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        end += Math.max(0, distanceToDefinedHi);\n      }\n      count = _limitValue(end, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type PrivateChart from '../core/core.controller.js';\nimport type {Chart, ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart | PrivateChart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart | PrivateChart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = round1(chart.height * pixelRatio);\n  const deviceWidth = round1(chart.width * pixelRatio);\n\n  (chart as PrivateChart).height = round1(chart.height);\n  (chart as PrivateChart).width = round1(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    (chart as PrivateChart).currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import type {Chart, ChartArea, ChartMeta, Scale, TRBL} from '../types/index.js';\n\nfunction getSizeForArea(scale: Scale, chartArea: ChartArea, field: keyof ChartArea) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta: ChartMeta, chartArea: ChartArea): TRBL {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nexport function getDatasetClipArea(chart: Chart, meta: ChartMeta): TRBL | false {\n  const clip = meta._clip;\n  if (clip.disabled) {\n    return false;\n  }\n  const area = getDatasetArea(meta, chart.chartArea);\n\n  return {\n    left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n    right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n    top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n    bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n  };\n}\n"],"names":["noop","uid","id","isNullOrUndef","value","undefined","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","_deprecated","scope","previous","console","warn","keyResolvers","v","x","o","y","_splitKey","parts","split","tmp","part","push","_getKeyResolver","obj","resolveObjectKey","resolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNonPrimitive","n","Symbol","toPrimitive","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","hi","lo","mid","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","from","fontString","pixelSize","fontStyle","fontFamily","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","dataset","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","isPatternOrGradient","color","Color","getHoverColor","saturate","darken","hexString","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","to","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope","node","root","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","weight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","j","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","w","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","rotate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","h","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","ret","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","parseInt","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","r","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","clientWidth","clientHeight","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","p1","p2","_steppedInterpolation","_bezierInterpolation","cp1","cp2","c","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","l","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","getSizeForArea","chartArea","field","getDatasetArea","getDatasetClipArea","_clip","disabled"],"mappings":"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"}